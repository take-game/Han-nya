/* @pjs preload="aooni_kiritu.jpg"; */
int[][] map ;
int[][] map1 = {
{2,2,2,2,2,2,2,2,1,13,13,1,2,2,2,2,2,2,2,2},
{1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10},
{11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,2,1,1,1,1,2,2,2,2,2,2,2,2},
};
int[][] map2 = {
{2,2,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,12},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,12},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,13,13,1,1,1,1,1,1,1,1,1},
};
int[][] map3 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map4 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,17,17,1,1,1,1,1,1,1,1,1},
};
int[][] map5 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14},
{12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
};
int[][] map6 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,15,15,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
};
int[][] map7 = {
{2,2,2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2},
{2,2,2,2,2,1,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,16,0,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,16,0,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,1,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,1,1,15,15,1,1,1,2,2,2,2,2,2},
};
int[][] map8 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map9 = {
{2,2,2,2,2,2,1,1,1,17,17,1,1,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,0,0,0,0,0,0,1,2,2,2,2,2,2},
{2,2,2,2,2,2,1,1,1,18,18,1,1,1,2,2,2,2,2,2},
};
int[][] map10 = {
{2,1,1,18,18,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map11 = {
{2,2,2,2,2,2,2,1,1,20,20,1,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22},//9
{19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22},//10
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,1,21,21,1,1,2,2,2,2,2,2,2},
};
int[][] map12 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,2,1,20,20,1,2,2,2,2,2,2,2,2},
};
int[][] map13 = {
{1,1,1,1,1,1,1,1,1,21,21,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map14 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23},
{22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map15 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24},
{23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
};
int[][] map16 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,25,25,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map17 = {
{2,2,2,2,2,2,2,1,1,26,26,1,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,1,1,25,25,1,1,2,2,2,2,2,2,2},
};
int[][] map18 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,26,26,1,1},
};
int[][] map19 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map20 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29},
{30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map21 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,1,31,31,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
};
int[][] map22 = {
{1,1,1,1,1,1,1,1,1,31,31,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map23 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,34,34,1,1},
};
int[][] map24 = {
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,34,34,1,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map25 = {
{2,1,1,36,36,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35},
{2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map26 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{1,1,36,36,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
};
int[][] map27 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map28 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};
int[][] map29 = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,40,40,1,1},
};
int[][] map30 = {
{3,3,3,3,3,3,3,1,1,41,41,1,1,3,3,3,3,3,3,3},
{4,4,4,4,4,4,3,1,0,0,0,0,1,3,4,4,4,4,4,4},
{3,3,3,3,3,4,3,1,0,0,0,0,1,3,4,3,3,3,3,3},
{3,3,3,3,3,4,3,1,0,0,0,0,1,3,4,3,3,3,3,3},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,0,0,0,0,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,0,0,0,0,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,1,1,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,1,1,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,0,0,0,0,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,0,0,0,0,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,1,1,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,1,1,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,0,0,0,0,1,5,5,5,5,5,5,5},
{5,5,5,5,5,5,5,1,42,42,42,42,1,5,5,5,5,5,5,5},
};

int CHIP = 30;
int masu_x = 20;
int masu_y = 20;
int px;
int py;
int ex;
int ey;
int which_map;
int PlayTime;
int PlayTimeS;
int LagTime;
int ELagTime;
int EnemyLagTime;
int EnemySpeed;
int ItemExist[] = new int [3];//0 on,1 off
int Item_x[] = new int [3];
int Item_y[] = new int [3];
int SystemExist[] = new int [3];//0 on,1 off
int System_x[] = new int [3];
int System_y[] = new int [3];
int HintExist[] = new int [3];//0 on,1 off
int Hint_x[] = new int [3];
int Hint_y[] = new int [3];
int gseq;
int mcnt;
PImage Aooni1;
int KeyPress;
int ItemCount;
int Distance_x;
int Distance_y;
int EnemyExist;//0 on,1 off
int EnemyAppearCount;
int EnemyTime;
int EnemyMapChangeTime;
int Map27Change;//0 on,1 off
int OutChange;//0 on,1 off
int GameOverEffect_x;
int GameOverEffect_y;
int GameOverEffect_w;
int GameOverEffect_h;
int GameOverEffect;
int LagTimePress;
int HintCount;

void setup() {
  size(600,600);
  PFont font = createFont("Monospaced.italic",50);
  textFont(font);
  GameInit();
  Aooni1 =loadImage("aooni_kiritu.jpg");
}

void draw() {
  if(gseq == 0){
    GameTitle();
  }else if(gseq == 1){
    GamePlay();
  }else if(gseq == 2){
    GameOver();
  }else if(gseq == 3){
    GameClear();
  }else if(gseq == 4){
    GameOverEffect();
  }else if(gseq == 5){
    GameStart_TextDisp();
  }
}
void GameInit(){
  gseq = 0;
  px=9;
  py=13;
  ex=0;
  ey=0;
  which_map =30;
  LagTime=0;
  EnemySpeed =160;
  for(int i=0;i<3;i++){
    ItemExist[i]=0;
    SystemExist[i]=0;
    HintExist[i]=0;
  }
  Item_x[0] = 4;
  Item_y[0] = 4;
  Item_x[1] = 4;
  Item_y[1] = 4;
  Item_x[2] = 4;
  Item_y[2] = 4;
  System_x[0] =9;
  System_y[0] =3;
  System_x[1] =10;
  System_y[1] =9;
  System_x[2] =9;
  System_y[2] =9;
  Hint_x[0] =3;
  Hint_y[0] =16;
  Hint_x[1] =4;
  Hint_y[1] =4;
  Hint_x[2] =13;
  Hint_y[2] =13;
  MapInit();
  ItemCount = 3;
  EnemyAppearCount = 0;
  EnemyExist = 1;
  Map27Change = 1;
  OutChange = 0;
  PlayTimeS = millis();
  GameOverEffect_x=0;
  GameOverEffect_y=6*CHIP;
  GameOverEffect_w=CHIP;
  GameOverEffect_h = 2*CHIP;
  GameOverEffect =0;
  HintCount = 3 ;
}
void MapInit(){
  map1[19][9]=1;
  map1[19][10]=1;
  map19[9][0]=1;
  map19[10][0]=1;
  map3[9][19]=1;
  map3[10][19]=1;
  map8[9][0]=1;
  map8[10][0]=1;
  map4[0][9]=1;
  map4[0][10]=1;
  map22[19][9]=1;
  map22[19][10]=1;
  map13[9][19]=1;
  map13[10][19]=1;
  map28[0][9] =1;
  map28[0][10] =1;
  map2[0][3] =1;
  map2[0][4] =1;
}
void GamePlay(){
  if(KeyPress == 0){
  MapChange();
  MapDisp();
  PlayerDisp();
  PlayerMove();
  if(EnemyMapChangeTime < millis()-ELagTime){
    EnemyDisp();
    EnemyMove();
    EnemyHitCheck();
  }
  ItemDisp();
  SystemDisp();
  HintDisp();
  GameClearTerms();
  smooth();
  }else if(KeyPress == 1){
  MapDisp();
  PlayerDisp();
  EnemyDisp();
  Item_TextDisp();
  ItemDisp();
  SystemDisp();
  HintDisp();
  }else if(KeyPress == 2){
  MapDisp();
  PlayerDisp();
  EnemyDisp();
  System_TextDisp();
  ItemDisp();
  SystemDisp();
  HintDisp();
  }else if(KeyPress == 3){
  MapDisp();
  PlayerDisp();
  EnemyDisp();
  Hint_TextDisp();
  ItemDisp();
  SystemDisp();
  HintDisp();
  }
  PlayTime= floor((millis()-PlayTimeS)/1000); // /s
}
void GameTitle(){
  background(0);
  mcnt++;
  if((mcnt%60) < 40){
    textSize(50);
    fill(255,255,0);
    text("Click to start",width/2-200,height/2-25);
  }
}
void GameOver(){
  background(#C10000);
  mcnt++;
  if((mcnt%60) < 40){
    textSize(50);
    fill(#6C0202);
    text("Game Over ...",width/2-150,height/2-25);
  }
}
void GameClear(){
  background(0);
  mcnt++;
  if((mcnt%60) < 40){
    textSize(50);
    fill(255,255,0);
    text("Game Clear!!",width/2-150,height/2-25);
  }
  PlayTimeDisp();
}
void mousePressed(){
  if( gseq == 0 ){
    gseq = 5;
    LagTimePress=millis();
  }
  if( gseq == 5 && 300 < millis()-LagTimePress){
    gseq = 1;
  }
  if( gseq == 2 ){
    GameInit();
  }
  if( gseq == 3 ){
    GameInit();
  }
  if(KeyPress != 0){
      KeyPress = 0;
    }
}

void MapChange(){
  if(which_map == 1){
    map=map1;
  }else if(which_map == 2){
    map=map2;
  }else if(which_map == 3){
    map=map3;
  }else if(which_map == 4){
    map=map4;
  }else if(which_map == 5){
    map=map5;
  }else if(which_map == 6){
    map=map6;
  }else if(which_map == 7){
    map=map7;
  }else if(which_map == 8){
    map=map8;
  }else if(which_map == 9){
    map=map9;
  }else if(which_map == 10){
    map=map10;
  }else if(which_map == 11){
    map=map11;
  }else if(which_map == 12){
    map=map12;
  }else if(which_map == 13){
    map=map13;
  }else if(which_map == 14){
    map=map14;
  }else if(which_map == 15){
    map=map15;
  }else if(which_map == 16){
    map=map16;
  }else if(which_map == 17){
    map=map17;
  }else if(which_map == 18){
    map=map18;
  }else if(which_map == 19){
    map=map19;
  }else if(which_map == 20){
    map=map20;
  }else if(which_map == 21){
    map=map21;
  }else if(which_map == 22){
    map=map22;
  }else if(which_map == 23){
    map=map23;
  }else if(which_map == 24){
    map=map24;
  }else if(which_map == 25){
    map=map25;
  }else if(which_map == 26){
    map=map26;
  }else if(which_map == 27){
    map=map27;
  }else if(which_map == 28){
    map=map28;
  }else if(which_map == 29){
    map=map29;
  }else if(which_map == 30){
    map=map30;
  }
  
  if(map[py][px] == 10){
    if(map == map1){
        which_map = 3;
        px=1;
        py=9;
    }
    if(map == map3){
        which_map = 1;
        px=18;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 11){
    if(map == map1){
        which_map = 4;
        px=18;
        py=9;
    }
    if(map == map4){
        which_map = 1;
        px=1;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 12){
    if(map == map2){
        which_map = 5;
        px=1;
        py=9;
    }
    if(map == map5){
        which_map = 2;
        px=18;
        py=2;
      }
      EnemyLag();
  }
  if(map[py][px] == 13){
    if(map == map1){
        which_map = 2;
        px=9;
        py=18;
    }
    if(map == map2){
        which_map = 1;
        px=9;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 14){
    if(map == map5){
        which_map = 6;
        px=1;
        py=13;
    }
    if(map == map6){
        which_map = 5;
        px=18;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 15){
    if(map == map6){
        which_map = 7;
        px=9;
        py=18;
    }
    if(map == map7){
        which_map = 6;
        px=16;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 16){
    if(map == map7){
        which_map = 8;
        px=18;
        py=9;
    }
    if(map == map8){
        which_map = 7;
        px=6;
        py=2;
      }
      EnemyLag();
  }
  if(map[py][px] == 17){
    if(map == map4){
        which_map = 9;
        px=9;
        py=1;
    }
    if(map == map9){
        which_map = 4;
        px=9;
        py=18;
      }
      EnemyLag();
  }
  if(map[py][px] == 18){
    if(map == map9){
        which_map = 10;
        px=3;
        py=1;
    }
    if(map == map10){
        which_map = 9;
        px=9;
        py=18;
    }
      EnemyLag();
  }
  if(map[py][px] == 19){
    if(map == map10){
        which_map = 11;
        px=1;
        py=9;
    }
    if(map == map11){
        which_map = 10;
        px=18;
        py=16;
      }
      EnemyLag();
  }
  if(map[py][px] == 20){
    if(map == map11){
        which_map = 12;
        px=9;
        py=18;
    }
    if(map == map12){
        which_map = 11;
        px=9;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 21){
    if(map == map11){
        which_map = 13;
        px=9;
        py=1;
    }
    if(map == map13){
        which_map = 11;
        px=9;
        py=18;
      }
      EnemyLag();
  }
  if(map[py][px] == 22){
    if(map == map11){
        which_map = 14;
        px=1;
        py=9;
    }
    if(map == map14){
        which_map = 11;
        px=18;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 23){
    if(map == map14){
        which_map = 15;
        px=1;
        py=9;
    }
    if(map == map15){
        which_map = 14;
        px=18;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 24){
    if(map == map15){
        which_map = 16;
        px=1;
        py=16;
    }
    if(map == map16){
        which_map = 15;
        px=18;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 25){
    if(map == map16){
        which_map = 17;
        px=9;
        py=18;
    }
    if(map == map17){
        which_map = 16;
        px=16;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 26){
    if(map == map17){
        which_map = 18;
        px=16;
        py=18;
    }
    if(map == map18){
        which_map = 17;
        px=9;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 27){
    if(map == map18){
        which_map = 19;
        px=18;
        py=9;
    }
    if(map == map19){
        which_map = 18;
        px=1;
        py=2;
      }
      EnemyLag();
  }
  if(map[py][px] == 28){
    if(map == map19){
        which_map = 3;
        px=18;
        py=9;
    }
    if(map == map3){
        which_map = 19;
        px=1;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 29){
    if(map == map8){
        which_map = 20;
        px=18;
        py=9;
    }
    if(map == map20){
        which_map = 8;
        px=1;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 30){
    if(map == map20){
        which_map = 21;
        px=18;
        py=2;
    }
    if(map == map21){
        which_map = 20;
        px=1;
        py=9;
      }
      EnemyLag();
  }
  if(map[py][px] == 31){
    if(map == map21){
        which_map = 22;
        px=9;
        py=1;
    }
    if(map == map22){
        which_map = 21;
        px=2;
        py=18;
      }
      EnemyLag();
  }
  if(map[py][px] == 32){
    if(map == map22){
        which_map = 4;
        px=9;
        py=1;
    }
    if(map == map4){
        which_map = 22;
        px=9;
        py=18;
      }
      EnemyLag();
  }
  if(map[py][px] == 33){
    if(map == map23){
      if(Map27Change == 1){
        which_map = 13;
        px=18;
        py=9;
      }else if(Map27Change == 0){
        which_map = 28;
        px=18;
        py=9;
      }
    }
    if(map == map13){
        which_map = 23;
        px=1;
        py=2;
      }
      EnemyLag();
  }
  if(map[py][px] == 34){
    if(map == map23){
        which_map = 24;
        px=16;
        py=1;
    }
    if(map == map24){
        which_map = 23;
        px=16;
        py=18;
      }
      EnemyLag();
  }
  if(map[py][px] == 35){
    if(map == map24){
        which_map = 25;
        px=18;
        py=16;
    }
    if(map == map25){
        which_map = 24;
        px=1;
        py=16;
      }
      EnemyLag();
  }
  if(map[py][px] == 36){
    if(map == map25){
        which_map = 26;
        px=3;
        py=18;
    }
    if(map == map26){
        which_map = 25;
        px=3;
        py=1;
      }
      EnemyLag();
  }
  if(map[py][px] == 37){
    if(map == map26){
        which_map = 27;
        px=1;
        py=9;
        Map27Change = 0;
    }
    if(map == map27){
        which_map = 26;
        px=18;
        py=3;
      }
      EnemyLag();
  }
  if(map[py][px] == 38 && Map27Change == 0){
      which_map = 23;
      px=1;
      py=2;
      EnemyLag();
  }
  if(map[py][px] == 39 ){
      which_map = 11;
      px=9;
      py=18;
      EnemyLag();
      Map27Change =1;
  }
  if(map[py][px] == 40){
    if(map == map2){
        which_map = 29;
        px=16;
        py=18;
        OutChange = 0;
    }
    if(map == map29){
        which_map = 2;
        px=3;
        py=1;
        OutChange = 1;
      }
      EnemyLag();
  }
  if(map[py][px] == 41){
    if(map == map30){
        which_map = 1;
        px=9;
        py=18;
        OutChange = 1;
    }
    if(map == map1){
        which_map = 30;
        px=9;
        py=1;
        OutChange = 0;
      }
      EnemyLag();
  }
  if(map[py][px] == 42){
    gseq = 3;
  }
}
void EnemyLag(){
  if(EnemyExist ==0){
    ELagTime=millis();
    ex=px;
    ey=py;
  }
}
void getPosition(){
  if(px>ex){
    Distance_x=floor(sq(px-ex));
  }else{
    Distance_x=floor(sq(ex-px));
  }
  if(py>ey){
    Distance_y= floor(sq(py-ey));
  }else{
    Distance_y=floor(sq(ey-py));
  }
  if(sqrt(Distance_x + Distance_y) > 11 && 8000 < millis() - EnemyTime)
    EnemyExist = 1;
    
  EnemyMapChangeTime = 100*floor(sqrt(Distance_x + Distance_y)) + 500;
}
void EnemyApper(){
  if(KeyPress == 0 && random(-1,1) > 0.8)
    EnemyAppearCount+=1;
  if(EnemyAppearCount > 100){
    for (int i = 0; i < masu_y; i++) {
      for (int k = 0; k < masu_x; k++) {
        if(map[i][k] != 0 && map[i][k] != 1 && map[i][k] != 2){
          if(i < masu_y - 1){
            if(map[i+1][k] == 0){
              ex = k;
              ey = i+1;
            }
          }
          if(i > 0){
            if(map[i-1][k] == 0){
              ex = k;
              ey = i-1;
            }
          }
          if(k < masu_x - 1){
            if(map[i][k+1] == 0){
              ex = k+1;
              ey = i;
            }
          }
          if(k > 0){
            if(map[i][k-1] == 0){
              ex = k-1;
              ey = i;
            }
          }
        }
      }
    }
    EnemyTime = millis();
    EnemyExist = 0 ;
    EnemyAppearCount =0;
  }
}
void MapDisp(){
  for (int i = 0; i < masu_y; i++) {
      for (int k = 0; k < masu_x; k++) {
      noStroke();
      if(map[i][k] == 3) fill(#797777);
      if(map[i][k] == 2) fill(0);
      if(map[i][k] == 1 && OutChange == 1) fill(#E6E3FA);//map[y][x]
      if(EnemyExist == 1 && map[i][k] != 1 && map[i][k] != 2 && map[i][k] != 3 && OutChange == 1) fill(#AF0917);
      if(EnemyExist == 0 && map[i][k] != 1 && map[i][k] != 2 && map[i][k] != 3 && OutChange == 1) fill(255);
      if(map[i][k] == 1 && OutChange == 0) fill(#401F04);//map[y][x]
      if(EnemyExist == 1 && map[i][k] != 1 && map[i][k] != 2 && map[i][k] != 3 && OutChange == 0) fill(#154D15);
      if(EnemyExist == 0 && map[i][k] != 1 && map[i][k] != 2 && map[i][k] != 3 && OutChange == 0) fill(255);
      if(map[i][k] == 4) fill(#19186C);
      if(map[i][k] == 5) fill(#503206);
        rect(k * CHIP, i * CHIP, CHIP, CHIP);
      }
    }
}
void PlayerDisp(){
  fill(0);
  rect(px * CHIP,py * CHIP,CHIP,CHIP);
}
void PlayerMove(){
  if(80<millis()-LagTime){
    if(keyPressed && (key == CODED)) {
        if(keyCode == LEFT) {
          if(map[py][px-1] != 1)
            px-=1;
        }
        else if(keyCode == RIGHT) {
          if(map[py][px+1] != 1)
            px+=1;
        }
        else if(keyCode == UP) {
          if(map[py-1][px] != 1)
            py-=1;
        }else if(keyCode == DOWN) {
          if(map[py+1][px] != 1)
            py+=1;
        }
        LagTime=millis();
      }
    }
    if(map[py][px] != 0){
      getPosition();
    }
}
void EnemyDisp(){
  if(EnemyExist == 0 ){
    fill(#7A33F0);
    image(Aooni1,ex * CHIP,ey * CHIP,CHIP,2 * CHIP);
  }else if(EnemyExist == 1 && OutChange == 1){
    EnemyApper();
  }
}
void EnemyMove(){
  if(EnemyExist == 0){
    if(EnemySpeed<millis()-EnemyLagTime){
      
      if(map[ey][ex+1] != 1 && ex < px){//1
          ex+=1;
      }else if(map[ey][ex+1] == 1 && ex < px){
          if(map[ey+1][ex] != 1 && ey <= py){
            ey+=1;
        }
          if(map[ey-1][ex] != 1 && ey > py){
            ey-=1;
        }
      }
      if(map[ey][ex-1] != 1 && ex > px){//2
          ex-=1;
      }else if(map[ey][ex-1] == 1 && ex > px){
          if(map[ey+1][ex] != 1 && ey <= py){
            ey+=1;
        }
          if(map[ey-1][ex] != 1 && ey > py){
            ey-=1;
        }
      }
      if(map[ey+1][ex] != 1 && ey < py){//3
          ey+=1;
      }else if(map[ey+1][ex] == 1 && ey < py){
          if(map[ey][ex-1] != 1 && ex >= px){
            ex-=1;
        }if(map[ey][ex+1] != 1 && ex < px){
            ex+=1;
        }
      }
      if(map[ey-1][ex] != 1 && ey > py){//4
          ey-=1;
      }else if(map[ey-1][ex] == 1 && ey > py){
          if(map[ey][ex-1] != 1 && ex >= px){
            ex-=1;
        }if(map[ey][ex+1] != 1 && ex < px){
            ex+=1;
        }
      }
      EnemyLagTime =millis();
    }
  }
}
void ItemDisp(){
  if(map==map22 && ItemExist[0] == 0){
    fill(0,255,0);
    rect(Item_x[0] * CHIP, Item_y[0] * CHIP, CHIP, CHIP);
  }
  if(map==map28 && ItemExist[1] == 0){
    fill(0,255,0);
    rect(Item_x[1] * CHIP, Item_y[1] * CHIP, CHIP, CHIP);
  }
  if(map==map29 && ItemExist[2] == 0){
    fill(0,255,0);
    rect(Item_x[2] * CHIP, Item_y[2] * CHIP, CHIP, CHIP);
  }
  ItemGet();
}
void ItemGet(){
  if(ItemExist[0] == 0 && px == Item_x[0] && py == Item_y[0] && map==map22 && KeyPress == 0){
      ItemExist[0] = 1 ;
      ItemCount-=1;
      KeyPress = 1;
    }
  if(ItemExist[1] == 0 && px == Item_x[1] && py == Item_y[1] && map==map28 && KeyPress == 0){
      ItemExist[1] = 1;
      ItemCount-=1;
      KeyPress = 1;
    }
  if(ItemExist[2] == 0 && px == Item_x[2] && py == Item_y[2] && map==map29 && KeyPress == 0){
      ItemExist[2] = 1;
      ItemCount-=1;
      KeyPress = 1;
    }
}
void GameClearTerms(){
  if(map==map1 && ItemExist[0] == 1 && ItemExist[1] == 1 && ItemExist[2] == 1){
    map1[19][9]=41;
    map1[19][10]=41;
  }
}
void EnemyHitCheck(){
  if(EnemyExist == 0 && px == ex && py == ey){
    gseq = 2;
  }
}
void Item_TextDisp(){
  if(ItemCount > 0){
      textSize(50);
      fill(255,255,0);
      text("あと"+ItemCount+"必要だ",0,height-60);
  }else{
      textSize(50);
      fill(255,255,0);
      text("どこかが開く音がした",0,height-60);
  }
}
void SystemDisp(){
  if(map==map19 && SystemExist[0] == 0){
    fill(0,255,0);
    rect(System_x[0] * CHIP, System_y[0] * CHIP, CHIP, CHIP);
  }
  if(map==map22 && SystemExist[1] == 0){
    fill(0,255,0);
    rect(System_x[1] * CHIP, System_y[1] * CHIP, CHIP, CHIP);
  }
  if(map==map28 && SystemExist[2] == 0){
    fill(0,255,0);
    rect(System_x[2] * CHIP, System_y[2] * CHIP, CHIP, CHIP);
  }
  SystemGet();
}
void SystemGet(){
  if(SystemExist[0] == 0 && px == System_x[0] && py == System_y[0] && map==map19 && KeyPress == 0){
      SystemExist[0] = 1 ;
      KeyPress = 2;
      map19[9][0]=28;
      map19[10][0]=28;
      map3[9][19]=28;
      map3[10][19]=28;
      map8[9][0]=29;
      map8[10][0]=29;
    }
  if(SystemExist[1] == 0 && px == System_x[1] && py == System_y[1] && map==map22 && KeyPress == 0){
      SystemExist[1] = 1;
      KeyPress = 2;
      map4[0][9]=32;
      map4[0][10]=32;
      map22[19][9]=32;
      map22[19][10]=32;
      map13[9][19]=33;
      map13[10][19]=33;
    } 
  if(SystemExist[2] == 0 && px == System_x[2] && py == System_y[2] && map==map28 && KeyPress == 0){
      SystemExist[2] = 1;
      KeyPress = 2;
      Map27Change = 1;
      map28[0][9]=39;
      map28[0][10]=39;
      map28[9][19]=1;
      map28[10][19]=1;
      map2[0][3]=40;
      map2[0][4]=40;
  }
}
void System_TextDisp(){
  textSize(50);
  fill(255,255,0);
  text("どこかが開く音がした",0,height-60);
}
void PlayTimeDisp(){
  textSize(30);
  fill(255,255,0);
  text("Clear Time :"+floor(PlayTime/60)+"分"+PlayTime%60+"秒",width/2-150,height/2+100);
}
void GameOverEffect(){
  background(255);
  fill(#4D498B);
  rect(GameOverEffect_x,GameOverEffect_y,GameOverEffect_w,GameOverEffect_h);
  if(GameOverEffect_x < width/2 && GameOverEffect==0){
    GameOverEffect_x+=2;   
  }else{
    GameOverEffect++;
    GameOverEffect_h+=12;
    GameOverEffect_w+=8;
    GameOverEffect_x-=4;
    GameOverEffect_y-=4;
  }
  if(GameOverEffect_w > 2*width)
    gseq = 2;
  image(Aooni1,GameOverEffect_x,GameOverEffect_y,GameOverEffect_w,GameOverEffect_h); 
}
void GameStart_TextDisp(){
  background(0);
  textSize(30);
  fill(255,255,0);
  text("”般若”が出るという屋敷があった...",30,height-60);
}
void HintDisp(){
  if(map==map2 && HintExist[0] == 0){
    fill(#F6FC54);
    rect(Hint_x[0] * CHIP, Hint_y[0] * CHIP, CHIP, CHIP);
  }
  if(map==map8 && HintExist[1] == 0){
    fill(#F6FC54);
    rect(Hint_x[1] * CHIP, Hint_y[1] * CHIP, CHIP, CHIP);
  }
  if(map==map12 && HintExist[2] == 0){
    fill(#F6FC54);
    rect(Hint_x[2] * CHIP, Hint_y[2] * CHIP, CHIP, CHIP);
  }
  HintGet();
}
void HintGet(){
  if(HintExist[0] == 0 && px == Hint_x[0] && py == Hint_y[0] && map==map2 && KeyPress == 0){
      HintExist[0] = 1 ;
      HintCount--;
      KeyPress = 3;
    }
  if(HintExist[1] == 0 && px == Hint_x[1] && py == Hint_y[1] && map==map8 && KeyPress == 0){
      HintExist[1] = 1;
      HintCount--;
      KeyPress = 3;
    }
  if(HintExist[2] == 0 && px == Hint_x[2] && py == Hint_y[2] && map==map12 && KeyPress == 0){
      HintExist[2] = 1;
      HintCount--;
      KeyPress = 3;
    }
}
void Hint_TextDisp(){
  if(HintCount==2){
    textSize(30);
    fill(255,255,0);
    text("屋敷に閉じ込められたようだ",width/2-150,height/2+100);
  }else if(HintCount==1){
    textSize(30);
    fill(255,255,0);
    text("外に出るには鍵が３つ必要だ",width/2-150,height/2+100);
  }else if(HintCount==0){
    textSize(30);
    fill(255,255,0);
    text("即死",width/2-150,height/2+100);
    EnemyExist =0;
    ex=px;
    ey=py;
  }
}
